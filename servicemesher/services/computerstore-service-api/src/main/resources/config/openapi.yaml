openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Computerstore
  license:
    name: MIT
servers:
  - url: 'http://computerstore.swagger.io/v1'
paths:
  /computers:
    get:
      summary: List all computers
      operationId: listcomputers
      tags:
        - computers
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      security:
        - computerstore_auth:
            - 'read:computers'
      responses:
        '200':
          description: An paged array of computers
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Computer'
              example:
                - id: 1
                  brand: HP
                  tag: 1112222-22
                - id: 2
                  brand: IBM
                  tag: 111122255-55
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a computer
      operationId: createcomputers
      requestBody:
        description: computers to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Computer'
      tags:
        - computers
      security:
        - computer_auth:
            - 'read:computers'
            - 'write:computers'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/computers/{computerId}':
    get:
      summary: Info for a specific computer
      operationId: showcomputerById
      tags:
        - computers
      parameters:
        - name: computerId
          in: path
          required: true
          description: The id of the computers to retrieve
          schema:
            type: string
      security:
        - computer_auth:
            - 'read:computers'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Computer'
              example:
                id: 1
                name: HP
                tag: 11112222-22
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a specific computers
      operationId: deletecomputerById
      tags:
        - computers
      parameters:
        - name: computerId
          in: path
          required: true
          description: The id of the computer to delete
          schema:
            type: string
        - name: key
          in: header
          required: true
          description: The key header
          schema:
            type: string
      security:
        - computer_auth:
            - 'write:computers'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Computer'
              examples:
                response:
                  value:
                    id: 1
                    branch: IBM
                    tag: 11235555
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    computer_auth:
      type: oauth2
      description: This API uses OAuth 2 with the client credential grant flow.
      flows:
        clientCredentials:
          tokenUrl: 'https://localhost:6882/token'
          scopes:
            'write:computers': modify computers in your account
            'read:computers': read your computers
  schemas:
    Computer:
      type: object
      required:
        - id
        - brand
      properties:
        id:
          type: integer
          format: int64
        brand:
          type: string
        tag:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
